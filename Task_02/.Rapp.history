5==7
5!=7
!TRUE 5==7
!TRUE5==7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE|| c(TRUE, FALSE, FALSE)
5>8 || 6 !=8 && 4> 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints>7)
any(ints)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2, 4, 5)
c(2, 4, 5)
mean(c(2, 4, 5))
test_func1()
test_funs1(x)
x
boring_function.R
"boring_function('My first function!')"
boring_function.R
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
reamiander (11/5)
reamiander (11, 5)
reamainder (11, 5)
remainder (11, 5)
remainder (divisor = 11, num = 5)
remainder( 4, div = 2)
args(remainder)
func(dat)
submit()
evaluate(c(1.4, 3.6, 7.9, 8.8))
evaluate(std,c(1.4, 3.6, 7.9, 8.8))
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(anonymous(c(8, 4, 0)))
evaluate(c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[-1]}, c(8, 4, 0))
?paste
paste("Programming", "is","fun!")
submit()
telegram()
submit()
mad_libs(place = "Fayetteville", adjustive = "wild", noun = "person")
submit()
"I"%p% "love"%p%"R"
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R!"
data(cars)
?cars
head(cars)
plot(cars)
?plot()
?plot
plot(x, y)
plot( x= cars$speed, y= cars$dist)
plot( x= cars$dist, y= cars$speed)
plot( x= cars$speed, y = cars$dist, xlab = "Speed")
plot( x= cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot( x= cars$speed, y = cars$dist, xlab = "Speed", ylab= "Stopping Distance ")
plot( x= cars$speed, y = cars$dist, xlab = "Speed", ylab= "Stopping Distance")
plot(cars, main="My Plot")
plot(cars, sub= "My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim= c(10, 15))
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(formula = mpg~ cyl, data =mtcars)
hist(mtcars$mpg)
source("http://jonsmitchell.com/code/plotFxn02b.R")
Data <- read.csv("http://jonsmitchell.com/data/beren.csv" , stringsAsFactors=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(Data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == "bottle")#
berenMilk <- Data[Feeds,]#
head(berenMilk)#
Feeds <- which(Data[, "event"] == "bottle")#
Feeds <- which(Data$event == "bottle")#
dayID <- apply(Data, 1, function(x)paste(x[1:3], collapse="-"))#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
Data$age <- dateID - dateID[which(Data$event =="birth")]#
head(Data)#
beren2 <- Data#
beren3 <- beren2[order(beren2$age),]#
write.csv(beren3, "beren_new.csv", quote=F, row.names=FALSE)#
#
Feeds <- which(beren3$event == "bottle")#
#
avgMilk <- mean(beren3$value[Feeds])#
# fluid oz#
#because it contains the numerical measurement#
#It calls back to the previously set object that we set for the event bottle#
avgFeed <- tapply(beren3$value [Feeds], beren3$age[Feeds], mean, na.rm=T)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var, na.rm=T)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum, na.rm=T)#
numFeeds <- tapply(beren3$value[Feeds], beren3$age[Feeds], length)#
cor(beren3$value[Feeds], beren3$age[Feeds])#
cor.test(beren3$value[Feeds], beren3$age[Feeds])#
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])#
summary(berenCor)#
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])#
boxplot( beren3$value[Feeds] ~ beren3$caregiver[Feeds], xlab= "who gave the bottle", ylab= "amount of milk consumed (oz)")#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h= avgFeed, lty=2, col='red')#
#
pdf("r02b-totalMilkByDay.pdf", height=4, width=4)#
#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')
source("http://jonsmitchell.com/code/plotFxn02b.R")
dev.off()
source("http://jonsmitchell.com/code/plotFxn02b.R")
setwd("~/Desktop/Evolution/Tasks/Task_02")#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
Growth <- which(beren3$event == "trait_mass")#
cor(Growth, beren3$age[Growth])#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck =-0.01)#
plot(as.numeric(names(Growth~beren3$age[Growth])), type="b", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
head(Growth)
Growth
?plot
summary(Growth)
summary(Growth)$coef[2, 1:2]
summary(Growth)$coef[2,1:2]
setwd("~/Desktop/Evolution/Tasks/Task_02")#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
Growth <- which(beren3$event == "trait_mass")#
cor(Growth, beren3$age[Growth])#
summary(Growth)$coef[2,1:2]
trait_mass
head(trait_mass)
Data <- read.csv("http://jonsmitchell.com/data/beren.csv" , stringsAsFactors=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(Data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:5, 1:3]#
beren<- Data#
Feeds <- which(beren[,9] =="Nap")#
berenNap <- beren[Feeds,]#
head(berenNap)#
Feeds <- which(beren[,"event"] == "Nap")#
Feeds <- which(beren$event == "Nap")#
dayID <- apply(beren, 1, function(x) paste(x[1:3], collapse="-"))#
dateID <- sapply(dayID, as.Date, format= "%Y-%n-%d", origin = "2019-04-18")#
beren$age <- dateID - dateID[which(beren$event =="birth")]#
head(beren)#
beren2 <- beren#
beren3 <- beren2[order(beren2$age) ,]
setwd("~/Desktop/Evolution/Tasks/Task_02")#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)
Growth <- which(beren3$event == "trait_mass")#
cor(Growth, beren3$age[Growth])
beren4 <- beren3[Naps,]
beren4 <- beren3[Growth,]
cor(Growth, beren3$age[Growth])
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck =-0.01)
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck =-0.01)#
plot(as.numeric(names(Growth~beren3$age[Growth])), type="b", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
beren4 <- beren3[Weight,]
Weight <- which(beren3$event == "trait_mass")#
beren4 <- beren3[Weight,]#
cor(Weight, beren4$age[Growth])
cor(Weight, beren3$age[Growth])
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck =-0.01)
beren3$value[Weight]
cor(Weight, beren3$age[Weight])
cor(Weight, beren3$age[days])
plot?
?plot
plot?
l
?plot
> plot(beren3$age, beren3$Weight, pch=16, col="red", xlim=c(100,250))
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
Weight <- which(beren3$event == "trait_mass")#
beren4 <- beren3[Weight,]#
cor(Weight, beren3$age[Weight])
> plot(beren3$age, beren3$Weight, pch=16, col="red", xlim=c(100,250))
plot(beren3$age, beren3$Weight)
plot(beren3$Weight, beren3$Age)
etwd("~/Desktop/Evolution/Tasks/Task_02")#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
Weight <- which(beren3$event == "trait_mass")#
beren4 <- beren3[Weight,]#
cor(Weight, beren3$age[Weight])#
plot(beren3$Weight, beren3$Age)
plot(beren3$Age, beren3$Weight)
plot(beren3$age, beren3$Weight)
lm(Weight ~ age, data=beren4)
setwd("~/Desktop/Evolution/Tasks/Task_02")#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
#
# make a nap duration column#
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
beren4$end_minute <- beren4$end_minute / 60#
beren4$start_minute <- beren4$start_minute / 60#
beren4$napstart <- beren4$start_hour + beren4$start_minute#
beren4$napend <- beren4$end_hour + beren4$end_minute#
beren4$naplength <- beren4$napend - beren4$napstart#
#
# use which() to find the row that == the thing#
keyDate <- beren3[grep("sleeping_thru", beren3$event),"age"]#
#
# use which() to find which rows are < the thing#
youngerDays <- which(beren4$age < keyDate)#
youngerBeren <- beren4[youngerDays,]#
#
# calculate the mean or slope or whatever you need for berenYounger#
youngerSlope <- lm( naplength ~ age, data=youngerBeren)#
#
# repeat above steps for which rows are > the thing#
#
#Use which() to find the rows are > the thing#
olderDays <- which(beren4$age > keyDate)#
olderBeren <- beren4[olderDays,]#
#Calculate the mean or slope of the rate #
olderSlope <- lm( naplength ~ age, data=olderBeren)#
#All the stuff he typed in#
> yS <- summary(youngerSlope)$coef[2,1:2]#
> oS <- summary(olderSlope)$coef[2,1:2]
> boxplot(rnorm(1e3, yS[1], yS[2]), rnorm(1e3, oS[1], oS[2]))
> yS <- summary(youngerSlope)$coef[2,1:2]
> yS<- summary(youngerSlope)$coef[2,1:2]
> yS<- summary(youngerSlope)$coef[2,1:2]
Data <- read.csv("http://jonsmitchell.com/data/beren.csv" , stringsAsFactors=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(Data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:5, 1:3]#
beren<- Data#
Feeds <- which(beren[,9] =="Nap")#
berenNap <- beren[Feeds,]#
head(berenNap)#
Feeds <- which(beren[,"event"] == "Nap")#
Feeds <- which(beren$event == "Nap")#
dayID <- apply(beren, 1, function(x) paste(x[1:3], collapse="-"))#
dateID <- sapply(dayID, as.Date, format= "%Y-%n-%d", origin = "2019-04-18")#
beren$age <- dateID - dateID[which(beren$event =="birth")]#
head(beren)#
beren2 <- beren#
beren3 <- beren2[order(beren2$age) ,]#
#
#Here is the start of Part C I hypothesize that the rate at which beren's nap times go down is going to be greater after the intro to sleeping through the night #
#
# set up directory & data#
setwd("~/Desktop/Evolution/Tasks/Task_02")#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
#
# make a nap duration column#
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
beren4$end_minute <- beren4$end_minute / 60#
beren4$start_minute <- beren4$start_minute / 60#
beren4$napstart <- beren4$start_hour + beren4$start_minute#
beren4$napend <- beren4$end_hour + beren4$end_minute#
beren4$naplength <- beren4$napend - beren4$napstart#
#
# use which() to find the row that == the thing#
keyDate <- beren3[grep("sleeping_thru", beren3$event),"age"]#
#
# use which() to find which rows are < the thing#
youngerDays <- which(beren4$age < keyDate)#
youngerBeren <- beren4[youngerDays,]#
#
# calculate the mean or slope or whatever you need for berenYounger#
youngerSlope <- lm( naplength ~ age, data=youngerBeren)#
#
# repeat above steps for which rows are > the thing#
#
#Use which() to find the rows are > the thing#
olderDays <- which(beren4$age > keyDate)#
olderBeren <- beren4[olderDays,]#
#Calculate the mean or slope of the rate #
olderSlope <- lm( naplength ~ age, data=olderBeren)#
#All the stuff he typed in#
> yS<- summary(youngerSlope)$coef[2,1:2]#
> oS<- summary(olderSlope)$coef[2,1:2]
yS<- summary(youngerSlope)$coef[2,1:2]
a
oS<- summary(olderSlope)$coef[2,1:2]
setwd("~/Desktop/Evolution/Tasks/Task_02")#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
Weight <- which(beren3$event == "trait_mass")#
beren4 <- beren3[Weight,]#
cor(Weight, beren3$age[Weight])#
plot(beren3$age, beren3$Weight)#
lm(Weight ~ age, data=beren4)
plot(beren3$age, beren3$trait_mass)
cor(Weight, beren4$age[Weight])
plot(beren4$age, beren34trait_mass)
plot(beren4$age, beren4$trait_mass)
cor(Weight, beren4$age[trait_mass])
cor(Weight, beren4$age[Weight])
beren4[grep("mass", beren4e$event), "age"]
beren4[grep("mass", beren4$event), "age"]
keyDate <- beren3[grep("sleeping_thru", beren3$event), "age"]
yDays <- which(beren4$age < keyDate)
yBeren <- beren4[youngerDays,]
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
 #naming stuff#
Weight <- which(beren3$event == "trait_mass")#
beren4 <- beren3[Weight,]#
cor(Weight, beren4$age[Weight])#
#
#Use which function to the row == the thing#
keyDate <- beren3[grep("sleeping_thru", beren3$event), "age"]#
#use the which() function to find things below and above the sleeping thru date #
yDays <- which(beren4$age < keyDate)#
yBeren <- beren4[youngerDays,]
ySLope <- lm (Weight ~ age, data=yBeren)
ySLope <- lm (trait_mass ~ age, data=yBeren)
ySLope <- lm(trait_mass ~ age, data=yBeren)
ySLope <- lm(mass ~ age, data=yBeren)
ySLope <- lm(Weight ~ age, data=yBeren)
oDays <- which(beren4$age > keyDate)
oBeren <- beren4[olderDays,]
oSlope <- lm ( weight ~ age, data=oBeren)
plot(beren4$age, beren4$trait_mass)
cor(Weight, beren4$age[Weight])
plot(yBeren$age, yBeren$mass)
ys <- summary(ySlope)$coef[2,1;2]
ys <- summary(ySlope)$coef[2,1:2]
ySLope <- lm(Weight ~ age, data=yBeren)
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
 #naming stuff#
Weight <- which(beren3$event == "trait_mass")#
beren4 <- beren3[Weight,]#
#
#Use which function to the row == the thing#
keyDate <- beren3[grep("sleeping_thru", beren3$event), "age"]#
#use the which() function to find things below and above the sleeping thru date and then the slope #
yDays <- which(beren4$age < keyDate)#
yBeren <- beren4[youngerDays,]#
ySLope <- lm(Weight ~ age, data=yBeren)#
#
#other split IDK what to do for the weight in the slope something isnt right but it might not be necessary anyway#
oDays <- which(beren4$age > keyDate)#
oBeren <- beren4[olderDays,]#
oSlope <- lm ( weight ~ age, data=oBeren)#
#
ys <- summary(ySlope)$coef[2,1:2]#
os <- summary(oSlope)$coef[2, 1:2]
oSlope <- lm ( trait_mass ~ age, data=oBeren)
oSlope <- lm ( mass ~ age, data=oBeren)
setwd("~/Desktop/Evolution/Tasks/Task_02")#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
#
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
head(beren4)#
#
#naming stuff#
beren4$end_minute <- beren4$end_minute / 60#
beren4$start_minute <- beren4$start_minute / 60#
beren4$napstart <- beren4$start_hour + beren4$start_minute#
beren4$napend <- beren4$end_hour + beren4$end_minute#
beren4$naplength <- beren4$napend - beren4$napstart#
#
naptime <- tapply(beren4$naplength, beren4$age, sum, na.rm=T)#
#
#graphing #
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5 ,0), tck=-.01) #
plot(as.numeric(names(naptime)), naptime, type="b", pch=16, xlab="day", ylab="naptime")#
cor.test(beren4$age, naplength)
cor.test(beren4$age, beren4$naplength)
setwd("~/Desktop/Evolution/Tasks/Task_02")#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
#
# make a nap duration column#
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
beren4$end_minute <- beren4$end_minute / 60#
beren4$start_minute <- beren4$start_minute / 60#
beren4$napstart <- beren4$start_hour + beren4$start_minute#
beren4$napend <- beren4$end_hour + beren4$end_minute#
beren4$naplength <- beren4$napend - beren4$napstart#
#
# use which() to find the row that == the thing#
keyDate <- beren3[grep("sleeping_thru", beren3$event),"age"]#
#
# use which() to find which rows are < the thing#
youngerDays <- which(beren4$age < keyDate)#
youngerBeren <- beren4[youngerDays,]#
#
# calculate the mean or slope or whatever you need for berenYounger#
youngerSlope <- lm( naplength ~ age, data=youngerBeren)#
#
# repeat above steps for which rows are > the thing#
#
#Use which() to find the rows are > the thing#
olderDays <- which(beren4$age > keyDate)#
olderBeren <- beren4[olderDays,]#
#Calculate the mean or slope of the rate #
olderSlope <- lm( naplength ~ age, data=olderBeren)
yS<- summary(youngerSlope)$coef[2,1:2]#
 oS<- summary(olderSlope)$coef[2,1:2]#
 boxplot(rnorm(1e3, yS[1], yS[2]), rnorm(1e3, oS[1], oS[2]))
par(mfrow=c(1,2))#
 plot(youngerBeren$age, youngerBeren$naplength)
abline(youngerSlope)
plot(olderBeren$age, olderBeren$naplength)
abline(olderSlope)
plot(youngerBeren$age, youngerBeren$naplength, pch=16, col="red", xlim=c(100,250))
points(olderBeren$age, olderBeren$naplength, pch=16, col="blue")
boxplot(rnorm(1e3, yS[1], yS[2]), rnorm(1e3, oS[1], oS[2]))
setwd("~/Desktop/Evolution/Tasks/Task_02")#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
#
# make a nap duration column#
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
beren4$end_minute <- beren4$end_minute / 60#
beren4$start_minute <- beren4$start_minute / 60#
beren4$napstart <- beren4$start_hour + beren4$start_minute#
beren4$napend <- beren4$end_hour + beren4$end_minute#
beren4$naplength <- beren4$napend - beren4$napstart#
#
# use which() to find the row that == the thing#
keyDate <- beren3[grep("sleeping_thru", beren3$event),"age"]#
#
# use which() to find which rows are < the thing#
youngerDays <- which(beren4$age < keyDate)#
youngerBeren <- beren4[youngerDays,]#
#
# calculate the mean or slope or whatever you need for berenYounger#
youngerSlope <- lm( naplength ~ age, data=youngerBeren)#
#
# repeat above steps for which rows are > the thing#
#
#Use which() to find the rows are > the thing#
olderDays <- which(beren4$age > keyDate)#
olderBeren <- beren4[olderDays,]#
#Calculate the mean or slope of the rate #
olderSlope <- lm( naplength ~ age, data=olderBeren)
yS<- summary(youngerSlope)$coef[2,1:2]#
 oS<- summary(olderSlope)$coef[2,1:2]
boxplot(rnorm(1e3, yS[1], yS[2]), rnorm(1e3, oS[1], oS[2]))
par(mfrow=c(1,2))
plot(youngerBeren$age, youngerBeren$naplength)
abline(youngerSlope)
plot(olderBeren$age, olderBeren$naplength)
abline(olderSlope)
plot(youngerBeren$age, youngerBeren$naplength, pch=16, col="red", xlim=c(100,250))
points(olderBeren$age, olderBeren$naplength, pch=16, col="blue")
keyDate <- beren4[grep("sleeping_thru", beren3$event), "age"]
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
 #naming stuff#
Weight <- which(beren3$event == "trait_mass")#
beren4 <- beren3[Weight,]#
#
#Use which function to the row == the thing#
keyDate <- beren4[grep("sleeping_thru", beren3$event), "age"]#
#use the which() function to find things below and above the sleeping thru date and then the slope #
yDays <- which(beren4$age < keyDate)#
yBeren <- beren4[youngerDays,]#
ySLope <- lm(Weight ~ age, data=yBeren)#
#
#other split IDK what to do for the weight in the slope something isnt right but it might not be necessary anyway#
oDays <- which(beren4$age > keyDate)#
oBeren <- beren4[olderDays,]#
oSlope <- lm (  ~ age, data=oBeren)#
#
ys <- summary(ySlope)$coef[2,1:2]#
os <- summary(oSlope)$coef[2, 1:2]
beren4
Data <- read.csv("http://jonsmitchell.com/data/beren.csv" , stringsAsFactors=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(Data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:5, 1:3]#
beren<- Data#
Feeds <- which(beren[,9] =="Nap")#
berenNap <- beren[Feeds,]#
head(berenNap)#
Feeds <- which(beren[,"event"] == "Nap")#
Feeds <- which(beren$event == "Nap")#
dayID <- apply(beren, 1, function(x) paste(x[1:3], collapse="-"))#
dateID <- sapply(dayID, as.Date, format= "%Y-%n-%d", origin = "2019-04-18")#
beren$age <- dateID - dateID[which(beren$event =="birth")]#
head(beren)#
beren2 <- beren#
beren3 <- beren2[order(beren2$age) ,]#
#
#Here is the start of Part C I hypothesize that the rate at which beren's nap times go down is going to be greater after the intro to sleeping through the night #
#
# set up directory & data#
setwd("~/Desktop/Evolution/Tasks/Task_02")#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
#
# make a nap duration column#
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
beren4$end_minute <- beren4$end_minute / 60#
beren4$start_minute <- beren4$start_minute / 60#
beren4$napstart <- beren4$start_hour + beren4$start_minute#
beren4$napend <- beren4$end_hour + beren4$end_minute#
beren4$naplength <- beren4$napend - beren4$napstart#
#
# use which() to find the row that == the thing#
keyDate <- beren3[grep("sleeping_thru", beren3$event),"age"]#
#
# use which() to find which rows are < the thing#
youngerDays <- which(beren4$age < keyDate)#
youngerBeren <- beren4[youngerDays,]#
#
# calculate the mean or slope or whatever you need for berenYounger#
youngerSlope <- lm( naplength ~ age, data=youngerBeren)#
#
# repeat above steps for which rows are > the thing#
#
#Use which() to find the rows are > the thing#
olderDays <- which(beren4$age > keyDate)#
olderBeren <- beren4[olderDays,]#
#Calculate the mean or slope of the rate #
olderSlope <- lm( naplength ~ age, data=olderBeren)#
#All the stuff he typed in#
yS<- summary(youngerSlope)$coef[2,1:2]#
oS<- summary(olderSlope)$coef[2,1:2]
par(mfrow=c(1,2))
boxplot(rnorm(1e3, yS[1], yS[2]), rnorm(1e3, oS[1], oS[2]))
plot(youngerBeren$age, youngerBeren$naplength, pch=16, col="red", xlim=c(100,250))
points(olderBeren$age, olderBeren$naplength, pch=16, col="blue")
abline(youngerSlope)
abline(olderSlope)
par(mfrow=c(1,2,3))
plot(youngerBeren$age, youngerBeren$naplength)
abline(youngerSlope)
plot(olderBeren$age, olderBeren$naplength)
abline(youngerSlope)
abline(olderSlope)
plot(youngerBeren$age, youngerBeren$naplength, pch=16, col="red", xlim=c(100,250))
par(mfrow=c(1,2))
abline(youngerSlope, col="red")
abline(youngerSlope col="red")
par(mfrow=c(1,2))
boxplot(rnorm(1e3, yS[1], yS[2]), rnorm(1e3, oS[1], oS[2]))
plot(youngerBeren$age, youngerBeren$naplength, pch=16, col="red", xlim=c(100,250))
points(olderBeren$age, olderBeren$naplength, pch=16, col="blue")
par(mfrow=c(1,2))#
boxplot(rnorm(1e3, yS[1], yS[2]), rnorm(1e3, oS[1], oS[2]))#
plot(youngerBeren$age, youngerBeren$naplength, pch=16, col="red", xlim=c(100,250))#
points(olderBeren$age, olderBeren$naplength, pch=16, col="blue")#
abline(youngerSlope)#
abline(olderSlope)
dev.off()
setwd("~/Desktop/Evolution/Tasks/Task_02")#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
#
# make a nap duration column#
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
beren4$end_minute <- beren4$end_minute / 60#
beren4$start_minute <- beren4$start_minute / 60#
beren4$napstart <- beren4$start_hour + beren4$start_minute#
beren4$napend <- beren4$end_hour + beren4$end_minute#
beren4$naplength <- beren4$napend - beren4$napstart#
#
# use which() to find the row that == the thing#
keyDate <- beren3[grep("sleeping_thru", beren3$event),"age"]#
#
# use which() to find which rows are < the thing#
youngerDays <- which(beren4$age < keyDate)#
youngerBeren <- beren4[youngerDays,]#
#
# calculate the mean or slope or whatever you need for berenYounger#
youngerSlope <- lm( naplength ~ age, data=youngerBeren)#
#
# repeat above steps for which rows are > the thing#
#
#Use which() to find the rows are > the thing#
olderDays <- which(beren4$age > keyDate)#
olderBeren <- beren4[olderDays,]#
#Calculate the mean or slope of the rate #
olderSlope <- lm( naplength ~ age, data=olderBeren)#
#SLope Naming #
yS<- summary(youngerSlope)$coef[2,1:2]#
oS<- summary(olderSlope)$coef[2,1:2]#
#
#Plotting#
par(mfrow=c(1,2))#
boxplot(rnorm(1e3, yS[1], yS[2]), rnorm(1e3, oS[1], oS[2]))#
plot(youngerBeren$age, youngerBeren$naplength, pch=16, col="red", xlim=c(100,250))#
points(olderBeren$age, olderBeren$naplength, pch=16, col="blue")#
abline(youngerSlope)#
abline(olderSlope)
dev.off()
etwd("~/Desktop/Evolution/Tasks/Task_02")#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
#
# make a nap duration column#
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
beren4$end_minute <- beren4$end_minute / 60#
beren4$start_minute <- beren4$start_minute / 60#
beren4$napstart <- beren4$start_hour + beren4$start_minute#
beren4$napend <- beren4$end_hour + beren4$end_minute#
beren4$naplength <- beren4$napend - beren4$napstart#
#
# use which() to find the row that == the thing#
keyDate <- beren3[grep("sleeping_thru", beren3$event),"age"]#
#
# use which() to find which rows are < the thing#
youngerDays <- which(beren4$age < keyDate)#
youngerBeren <- beren4[youngerDays,]#
#
# calculate the mean or slope or whatever you need for berenYounger#
youngerSlope <- lm( naplength ~ age, data=youngerBeren)#
#
# repeat above steps for which rows are > the thing#
#
#Use which() to find the rows are > the thing#
olderDays <- which(beren4$age > keyDate)#
olderBeren <- beren4[olderDays,]#
#Calculate the mean or slope of the rate #
olderSlope <- lm( naplength ~ age, data=olderBeren)#
#SLope Naming #
yS<- summary(youngerSlope)$coef[2,1:2]#
oS<- summary(olderSlope)$coef[2,1:2]#
#
#Plotting#
par(mfrow=c(1,2))#
boxplot(rnorm(1e3, yS[1], yS[2]), rnorm(1e3, oS[1], oS[2]))#
plot(youngerBeren$age, youngerBeren$naplength, pch=16, col="red", xlim=c(100,250))#
points(olderBeren$age, olderBeren$naplength, pch=16, col="blue")#
abline(youngerSlope)#
abline(olderSlope)
setwd("~/Desktop/Evolution/Tasks/Task_02")#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
#
# make a nap duration column#
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
beren4$end_minute <- beren4$end_minute / 60#
beren4$start_minute <- beren4$start_minute / 60#
beren4$napstart <- beren4$start_hour + beren4$start_minute#
beren4$napend <- beren4$end_hour + beren4$end_minute#
beren4$naplength <- beren4$napend - beren4$napstart#
#
# use which() to find the row that == the thing#
keyDate <- beren3[grep("sleeping_thru", beren3$event),"age"]#
#
# use which() to find which rows are < the thing#
youngerDays <- which(beren4$age < keyDate)#
youngerBeren <- beren4[youngerDays,]#
#
# calculate the mean or slope or whatever you need for berenYounger#
youngerSlope <- lm( naplength ~ age, data=youngerBeren)#
#
# repeat above steps for which rows are > the thing#
#
#Use which() to find the rows are > the thing#
olderDays <- which(beren4$age > keyDate)#
olderBeren <- beren4[olderDays,]#
#Calculate the mean or slope of the rate #
olderSlope <- lm( naplength ~ age, data=olderBeren)#
#SLope Naming #
yS<- summary(youngerSlope)$coef[2,1:2]#
oS<- summary(olderSlope)$coef[2,1:2]#
#
#Plotting#
par(mfrow=c(1,2))#
boxplot(rnorm(1e3, yS[1], yS[2]), rnorm(1e3, oS[1], oS[2]))#
plot(youngerBeren$age, youngerBeren$naplength, pch=16, col="red", xlim=c(100,250))#
points(olderBeren$age, olderBeren$naplength, pch=16, col="blue")#
abline(youngerSlope)#
abline(olderSlope)
dev.off()
par(mfrow=c(1,2))#
boxplot(rnorm(1e3, yS[1], yS[2]), rnorm(1e3, oS[1], oS[2]))#
plot(youngerBeren$age, youngerBeren$naplength, pch=16, col="red", xlim=c(100,250))#
points(olderBeren$age, olderBeren$naplength, pch=16, col="blue")#
abline(youngerSlope)#
abline(olderSlope)
dev.off()
olderSlope <- lm( naplength ~ age, data=olderBeren)
olderSLope
olderSlope
Beren5 <-lm( naplength ~ age, data=beren4)
Beren5
youngerslope
youngerSlope
olderSlope
par(mfrow=c(1,2))#
boxplot(rnorm(1e3, yS[1], yS[2]), rnorm(1e3, oS[1], oS[2]))#
plot(youngerBeren$age, youngerBeren$naplength, pch=16, col="red", xlim=c(100,250))#
points(olderBeren$age, olderBeren$naplength, pch=16, col="blue")#
abline(youngerSlope)#
abline(olderSlope)
abline(Beren5)
Beren5
zxq <- 0.002255*274
.438686+zxq
zxxq<- .438686+zxq
zxxq*60
setwd("~/Desktop/Evolution/Tasks/Task_02")#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
#
# make a nap duration column#
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
beren4$end_minute <- beren4$end_minute / 60#
beren4$start_minute <- beren4$start_minute / 60#
beren4$napstart <- beren4$start_hour + beren4$start_minute#
beren4$napend <- beren4$end_hour + beren4$end_minute#
beren4$naplength <- beren4$napend - beren4$napstart#
#
# use which() to find the row that == the thing#
keyDate <- beren3[grep("sleeping_thru", beren3$event),"age"]#
#
# use which() to find which rows are < the thing#
youngerDays <- which(beren4$age < keyDate)#
youngerBeren <- beren4[youngerDays,]#
#
# calculate the mean or slope or whatever you need for berenYounger#
youngerSlope <- lm( naplength ~ age, data=youngerBeren)#
#
# repeat above steps for which rows are > the thing#
#
#Use which() to find the rows are > the thing#
olderDays <- which(beren4$age > keyDate)#
olderBeren <- beren4[olderDays,]#
#Calculate the mean or slope of the rate #
olderSlope <- lm( naplength ~ age, data=olderBeren)#
#
youngerSlope#
olderSlope#
#SLope Naming #
yS<- summary(youngerSlope)$coef[2,1:2]#
oS<- summary(olderSlope)$coef[2,1:2]#
#
#Plotting#
par(mfrow=c(1,2))#
boxplot(rnorm(1e3, yS[1], yS[2]), rnorm(1e3, oS[1], oS[2]))#
plot(youngerBeren$age, youngerBeren$naplength, pch=16, col="red", xlim=c(100,250))#
points(olderBeren$age, olderBeren$naplength, pch=16, col="blue")#
abline(youngerSlope)#
abline(olderSlope)
par(mfrow=c(1,2))#
boxplot(rnorm(1e3, yS[1], yS[2]), rnorm(1e3, oS[1], oS[2]))#
plot(youngerBeren$age, youngerBeren$naplength, pch=16, col="red", xlim=c(100,250))#
points(olderBeren$age, olderBeren$naplength, pch=16, col="blue")#
abline(youngerSlope)#
abline(olderSlope)
zxq <- 0.002255*284
zxxq<- .438686+zxq
zxq
zxq <- 0.002255*284
zxxq<- .438686+zxq
zxq
zxxq
zxxq*60
